${COPYRIGHT}
.TH plfs_invalidate_read_cache 3 "${PACKAGE_STRING}" 
.SH NAME
plfs_invalidate_read_cache
.SH SYNTAX
#include <plfs.h>
.PP
int plfs_invalidate_read_cache( const char *dir );

.SH DESCRIPTION
Drop all the cached objects related to the given directory, so that
following readdir/stat can get the correct info about regular files
in this directory and open/read can get the latest data of those
regular files in this directory. By latest, it means the data in
the backend file system instead of stale memory caches.

Memory cache is critical to performance, but the data read from
cache might be stale in a distributed environment. In order to
solve this problem, this function is provided to invalidate the cache,
so that later operations such as plfs_open() or plfs_read() will
get the latest version of required information from backend
file systems.

See
.I plfs_flush_writes(3)
about how to make PLFS flush all modifications to the backend file
systems.

Currently it is only useful for small file mode(workload 1-n), for
other modes, it does nothing.

.SH INPUT PARAMETERS
.TP 1i
dir
path to the directory whose cached objects will be dropped.

.SH RETURN VALUES
0 on success, -errno otherwise.

.SH AUTHORS
${AUTHORS}

.SH SEE ALSO
${SEEALSO3}
