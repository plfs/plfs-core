${COPYRIGHT}
.TH plfs_create 3 "${PACKAGE_STRING}" 
.SH NAME
plfs_create 
.SH SYNTAX
#include <plfs.h>
.PP
plfs_error_t plfs_create( const char *path, mode_t mode, int flags, pid_t pid );

.SH DESCRIPTION
Create the file.  Note you don't need to call this, you can also pass O_CREAT to plfs_open.

.SH INPUT PARAMETERS
.TP 1i
path
File to create
.TP 1i
mode
Permissions to give file
.TP 1i
flags
open flags
.TP 1i
pid 
A unique value to ensure that multiple writers will not
interfere with each other.  If multiple processes from different nodes
are sharing a file, the unique values must be unique only for each node
(i.e. different nodes can use the same value safely).


.SH RETURN VALUES
Almost all PLFS functions return a plfs_error_t error type with PLFS_SUCCESS 
indicating that the function completed successfully and PLFS_E* indicating
an error. All possible return values are enumerated in plfs_error.h and can
be queried by calling strplfserr(plfs_error_t err) to get more detail about
the specific error code returned.

If a function fills out any data structures they are passed in as an argument
and not returned via the return type.

.SH AUTHORS
${AUTHORS}

.SH SEE ALSO
${SEEALSO3}

